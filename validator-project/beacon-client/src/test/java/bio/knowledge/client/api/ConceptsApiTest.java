/*
 * Bio Translator Knowledge Beacon API
 * This is the Translator Knowledge Beacon web service application programming interface (API) 
 *
 * OpenAPI spec version: 1.1.1
 * Contact: richard@starinformatics.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.knowledge.client.api;

import bio.knowledge.client.ApiException;
import bio.knowledge.client.model.BeaconConcept;
import bio.knowledge.client.model.BeaconConceptWithDetails;
import bio.knowledge.client.model.ExactMatchResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConceptsApi
 */
@Ignore
public class ConceptsApiTest {

    private final ConceptsApi api = new ConceptsApi();

    
    /**
     * 
     *
     * Retrieves details for a specified concepts in the system, as specified by a (url-encoded) CURIE identifier of a concept known the given knowledge source. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConceptDetailsTest() throws ApiException {
        String conceptId = null;
        BeaconConceptWithDetails response = api.getConceptDetails(conceptId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieves a list of whose concept in the  beacon knowledge base with names and/or synonyms  matching a set of keywords or substrings.  The results returned should generally  be returned in order of the quality of the match,  that is, the highest ranked concepts should exactly  match the most keywords, in the same order as the  keywords were given. Lower quality hits with fewer  keyword matches or out-of-order keyword matches,  should be returned lower in the list. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConceptsTest() throws ApiException {
        List<String> keywords = null;
        List<String> categories = null;
        Integer size = null;
        List<BeaconConcept> response = api.getConcepts(keywords, categories, size);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Given an input array of [CURIE](https://www.w3.org/TR/curie/) identifiers of known exactly matched concepts [*sensa*-SKOS](http://www.w3.org/2004/02/skos/core#exactMatch), retrieves the list of [CURIE](https://www.w3.org/TR/curie/) identifiers of additional concepts that are deemed by the given knowledge source to be exact matches to one or more of the input concepts **plus** whichever concept identifiers from the input list were specifically matched to  these additional concepts, thus giving the whole known set of equivalent concepts known to this particular knowledge source.  If an empty set is  returned, the it can be assumed that the given knowledge source does  not know of any new equivalent concepts matching the input set. The caller of this endpoint can then decide whether or not to treat  its input identifiers as its own equivalent set. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getExactMatchesToConceptListTest() throws ApiException {
        List<String> c = null;
        List<ExactMatchResponse> response = api.getExactMatchesToConceptList(c);

        // TODO: test validations
    }
    
}
